WordCountMapper:--
package com.WordCount;

import java.io.IOException;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Mapper.Context;

public class WordCountMapper extends Mapper<LongWritable, Text,Text, LongWritable>
{   
    public void map(LongWritable key, Text value, Context output) throws IOException, InterruptedException
    {
            output.write(value, new LongWritable(1));
        } 
     }

WordCountReducer:--
package com.WordCount;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.Reducer.Context;

public class WordCountReducer extends Reducer<Text, LongWritable, Text, IntWritable>
{
       public void reduce(Text key, Iterable<LongWritable> value, Context output) throws IOException, InterruptedException
    {
        int sum=0;
        for(LongWritable val:value){
            sum +=val.get();
        }
        output.write(key, new IntWritable(sum));
    }

}


WordCountdriver:--
package com.WordCount;


import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.Tool;
import java.io.IOException;


public class WordCountDriver{ 

 public static void main(String[] args) throws IOException,ClassNotFoundException, InterruptedException {

        
        Job job=new Job(new Configuration());
	job.setJobName("WC");
        job.setJarByClass(WordCountDriver.class);
        
        job.setInputFormatClass(TextInputFormat.class);
        
        job.setMapOutputKeyClass(Text.class);
        job.setMapOutputValueClass(LongWritable.class);
        

        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);
        
        job.setMapperClass(WordCountMapper.class);
       job.setReducerClass(WordCountReducer.class);
        
        FileInputFormat.addInputPath(job, new Path(args[0]));
        FileOutputFormat.setOutputPath(job, new Path(args[1]));
        
        job.waitForCompletion(true);
		
    }
    
}